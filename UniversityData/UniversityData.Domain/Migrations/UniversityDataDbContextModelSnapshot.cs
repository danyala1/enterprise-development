// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityData.Domain;

#nullable disable

namespace UniversityData.Domain.Migrations
{
    [DbContext(typeof(UniversityDataDbContext))]
    partial class UniversityDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("UniversityData.Domain.ConstructionProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameConstructionProperty")
                        .HasColumnType("longtext")
                        .HasColumnName("name_construction_property");

                    b.HasKey("Id");

                    b.ToTable("construction_property");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameConstructionProperty = "муниципальная"
                        },
                        new
                        {
                            Id = 2,
                            NameConstructionProperty = "частная"
                        },
                        new
                        {
                            Id = 3,
                            NameConstructionProperty = "федеральная"
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("SupervisorNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("supervisor_number");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("university_id");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ГИиБ",
                            SupervisorNumber = "890918734",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Кафедры алгебры и геометрии",
                            SupervisorNumber = "890918735",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Кафедра высшей математики",
                            SupervisorNumber = "890918736",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Кафедра информационных технологий",
                            SupervisorNumber = "890918737",
                            UniversityId = 3
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("StudentsCount")
                        .HasColumnType("int")
                        .HasColumnName("students_count");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("university_id");

                    b.Property<int>("WorkersCount")
                        .HasColumnType("int")
                        .HasColumnName("workers_count");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("faculty");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Институт информатики и кибернетики",
                            StudentsCount = 110,
                            UniversityId = 1,
                            WorkersCount = 16
                        },
                        new
                        {
                            Id = 2,
                            Name = "Институт экономики и управления",
                            StudentsCount = 81,
                            UniversityId = 1,
                            WorkersCount = 22
                        },
                        new
                        {
                            Id = 3,
                            Name = "Юридический институт",
                            StudentsCount = 65,
                            UniversityId = 1,
                            WorkersCount = 11
                        },
                        new
                        {
                            Id = 4,
                            Name = "Социально-гумманитарный институт",
                            StudentsCount = 200,
                            UniversityId = 2,
                            WorkersCount = 30
                        },
                        new
                        {
                            Id = 5,
                            Name = "Институт доп. образования",
                            StudentsCount = 62,
                            UniversityId = 2,
                            WorkersCount = 22
                        },
                        new
                        {
                            Id = 6,
                            Name = "Институт двигателей и энергетических установок",
                            StudentsCount = 70,
                            UniversityId = 3,
                            WorkersCount = 16
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.Rector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("degree");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("patronymic");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("position");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("surname");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("rector");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = "Доктор экономических наук",
                            Name = "Владимир",
                            Patronymic = "Дмитриевич",
                            Position = "Ректор",
                            Surname = "Богатырев",
                            Title = "Профессор"
                        },
                        new
                        {
                            Id = 2,
                            Degree = "Доктор технических наук",
                            Name = "Дмитрий",
                            Patronymic = "Евгеньевич",
                            Position = "Ректор",
                            Surname = "Быков",
                            Title = "Профессор"
                        },
                        new
                        {
                            Id = 3,
                            Degree = "Кандидат технических наук",
                            Name = "Вадим",
                            Patronymic = "Александрович",
                            Position = "Ректор",
                            Surname = "Ружников",
                            Title = "Доцент"
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.Specialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("code");

                    b.Property<int>("CountGroups")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("specialty");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "09.03.03",
                            CountGroups = 0,
                            Name = "Прикладная информатика"
                        },
                        new
                        {
                            Id = 2,
                            Code = "09.03.02",
                            CountGroups = 0,
                            Name = "Информационные системы и технологии"
                        },
                        new
                        {
                            Id = 3,
                            Code = "09.03.01",
                            CountGroups = 0,
                            Name = "Информатика и вычислительная техника"
                        },
                        new
                        {
                            Id = 4,
                            Code = "01.03.02",
                            CountGroups = 0,
                            Name = "Прикладная математика и информатика"
                        },
                        new
                        {
                            Id = 5,
                            Code = "10.05.03",
                            CountGroups = 0,
                            Name = "Информационная безопасность автоматизированных систем"
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.SpecialtyTableNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountGroups")
                        .HasColumnType("int")
                        .HasColumnName("count_groups");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("specialty_id");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int")
                        .HasColumnName("university_id");

                    b.HasKey("Id");

                    b.HasIndex("SpecialtyId");

                    b.HasIndex("UniversityId");

                    b.ToTable("specialty_table_node");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountGroups = 8,
                            SpecialtyId = 1,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CountGroups = 17,
                            SpecialtyId = 1,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 3,
                            CountGroups = 6,
                            SpecialtyId = 2,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 4,
                            CountGroups = 6,
                            SpecialtyId = 2,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 5,
                            CountGroups = 9,
                            SpecialtyId = 3,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 6,
                            CountGroups = 4,
                            SpecialtyId = 3,
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 7,
                            CountGroups = 8,
                            SpecialtyId = 4,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 8,
                            CountGroups = 8,
                            SpecialtyId = 4,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 9,
                            CountGroups = 10,
                            SpecialtyId = 5,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 10,
                            CountGroups = 8,
                            SpecialtyId = 5,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 11,
                            CountGroups = 8,
                            SpecialtyId = 1,
                            UniversityId = 3
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("address");

                    b.Property<int>("ConstructionPropertyId")
                        .HasColumnType("int")
                        .HasColumnName("construction_property_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("number");

                    b.Property<int?>("RectorDataId")
                        .HasColumnType("int");

                    b.Property<int>("RectorId")
                        .HasColumnType("int")
                        .HasColumnName("rector_id");

                    b.Property<int>("UniversityPropertyId")
                        .HasColumnType("int")
                        .HasColumnName("university_property_id");

                    b.HasKey("Id");

                    b.HasIndex("ConstructionPropertyId");

                    b.HasIndex("RectorDataId");

                    b.HasIndex("RectorId");

                    b.HasIndex("UniversityPropertyId");

                    b.ToTable("university");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Самара",
                            ConstructionPropertyId = 1,
                            Name = "Самарский университет",
                            Number = "12345",
                            RectorId = 1,
                            UniversityPropertyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Самара",
                            ConstructionPropertyId = 1,
                            Name = "СамГТУ",
                            Number = "56789",
                            RectorId = 2,
                            UniversityPropertyId = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Самара",
                            ConstructionPropertyId = 3,
                            Name = "ПГУТИ",
                            Number = "45678",
                            RectorId = 3,
                            UniversityPropertyId = 1
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.UniversityProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameUniversityProperty")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name_university_property");

                    b.HasKey("Id");

                    b.ToTable("university_property");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameUniversityProperty = "муниципальная"
                        },
                        new
                        {
                            Id = 2,
                            NameUniversityProperty = "частная"
                        });
                });

            modelBuilder.Entity("UniversityData.Domain.Department", b =>
                {
                    b.HasOne("UniversityData.Domain.University", "University")
                        .WithMany("DepartmentsData")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniversityData.Domain.Faculty", b =>
                {
                    b.HasOne("UniversityData.Domain.University", "University")
                        .WithMany("FacultiesData")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniversityData.Domain.SpecialtyTableNode", b =>
                {
                    b.HasOne("UniversityData.Domain.Specialty", "Specialty")
                        .WithMany("SpecialtyTableNodes")
                        .HasForeignKey("SpecialtyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityData.Domain.University", "University")
                        .WithMany("SpecialtyTable")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialty");

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniversityData.Domain.University", b =>
                {
                    b.HasOne("UniversityData.Domain.ConstructionProperty", "ConstructionProperty")
                        .WithMany("Universities")
                        .HasForeignKey("ConstructionPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityData.Domain.Rector", "RectorData")
                        .WithMany()
                        .HasForeignKey("RectorDataId");

                    b.HasOne("UniversityData.Domain.Rector", null)
                        .WithMany()
                        .HasForeignKey("RectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversityData.Domain.UniversityProperty", "UniversityProperty")
                        .WithMany("Universities")
                        .HasForeignKey("UniversityPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConstructionProperty");

                    b.Navigation("RectorData");

                    b.Navigation("UniversityProperty");
                });

            modelBuilder.Entity("UniversityData.Domain.ConstructionProperty", b =>
                {
                    b.Navigation("Universities");
                });

            modelBuilder.Entity("UniversityData.Domain.Specialty", b =>
                {
                    b.Navigation("SpecialtyTableNodes");
                });

            modelBuilder.Entity("UniversityData.Domain.University", b =>
                {
                    b.Navigation("DepartmentsData");

                    b.Navigation("FacultiesData");

                    b.Navigation("SpecialtyTable");
                });

            modelBuilder.Entity("UniversityData.Domain.UniversityProperty", b =>
                {
                    b.Navigation("Universities");
                });
#pragma warning restore 612, 618
        }
    }
}
